{"version":3,"file":"static/js/424.83dc6633.chunk.js","mappings":"uOAae,SAASA,EAAUC,GAChC,IAAIC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACb,GAAsCC,EAAAA,EAAAA,MAAtC,eAAKC,EAAL,KAAmBC,EAAnB,KAEA,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAaC,EAAAA,EAAAA,QAAO,OAE1BC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAkB,IAAIC,gBACtBN,EAAOH,EAAaU,IAAI,SAC5B,GAAKP,EAKL,OAJAQ,EAAAA,EAAAA,YAAgB,eAAgBH,EAAiBL,GAAMS,MAAK,SAACC,GAC3DT,EAAQS,EAASC,QAClB,IAEM,kBAAMN,EAAgBO,OAAtB,CACR,GAAE,CAACf,EAAaU,IAAI,WAYrB,OACE,UAACM,EAAA,EAAD,YACE,gBAAKC,UAAU,WAAf,UACE,mBACEC,QAAS,WACPvB,GAAU,EACX,EACDsB,UAAU,cAJZ,wBAUF,iBAAKA,UAAU,iBAAf,WACE,6CACA,4BACIpB,EAAOsB,UACP,4BACE,kBACEC,SA7BO,SAACC,GACpBA,EAAMC,iBACN,IAAIC,EAAQlB,EAAWmB,QAAQC,MAE7BxB,EADEsB,EACc,CAAEA,MAAAA,GAEF,CAAC,EAEpB,EAsBaE,MAAOzB,EAAaU,IAAI,UAAY,GAFtC,WAIE,kBACEgB,KAAK,OACLC,IAAKtB,EACLY,UAAU,kBAEZ,mBAAQS,KAAK,SAAST,UAAU,cAAhC,wBAIF,gBAAKA,UAAU,kBAAf,UACE,eAAIA,UAAU,OAAd,SACGd,GACCA,EAAKyB,KAAI,SAACC,GAAD,OACP,yBACE,SAAC,KAAD,CAAMC,GAAI,UAAYD,EAAQE,GAA9B,SAAmCF,EAAQG,SADpCH,EAAQE,GADV,WASlBlC,EAAOsB,UAAW,SAAC,KAAD,YAK5B,C,oBC1FD,IAAMc,EAAM,mCAgBNtB,EAAM,CACVuB,YAfkB,SAACC,EAAQ3B,GAAiC,IAAhBe,EAAe,uDAAP,GACpD,MAAiB,KAAVA,EACHa,MAAM,gCAAD,OAAiCD,EAAjC,oBAAmDF,GAAO,CAC7DI,OAAQ7B,EAAgB6B,SACvBzB,MAAK,SAAAC,GACN,OAAOA,EAASyB,MACjB,IACDF,MAAM,gCAAD,OAAiCD,EAAjC,oBAAmDF,EAAnD,kBAAgEV,GAAS,CAC5Ec,OAAQ7B,EAAgB6B,SACvBzB,MAAK,SAAAC,GACN,OAAOA,EAASyB,MACjB,GACN,GAMD,K","sources":["components/Search/Search.js","services/api.js"],"sourcesContent":["import {\n  Outlet,\n  useNavigate,\n  useParams,\n  useSearchParams,\n  Link,\n} from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport ErrorBoundary from \"../ErrorBoundary\";\nimport api from \"../../services/api\";\nimport \"../Common.css\";\nimport \"./Search.css\";\n\nexport default function MoviePage(props) {\n  let navigate = useNavigate();\n  let params = useParams();\n  let [searchParams, setSearchParams] = useSearchParams();\n\n  const [data, setData] = useState(null);\n  const elementRef = useRef(null);\n\n  useEffect(() => {\n    let abortController = new AbortController();\n    let data = searchParams.get(\"query\");\n    if (!data) return;\n    api.fetchMovies(\"search/movie\", abortController, data).then((response) => {\n      setData(response.results);\n    });\n\n    return () => abortController.abort();\n  }, [searchParams.get(\"query\")]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let query = elementRef.current.value;\n    if (query) {\n      setSearchParams({ query });\n    } else {\n      setSearchParams({});\n    }\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\" to-left\">\n        <button\n          onClick={() => {\n            navigate(-1);\n          }}\n          className=\"back-button\"\n        >\n          Go back\n        </button>\n      </div>\n\n      <div className=\"search-section\">\n        <h1>Start searching</h1>\n        <div>\n          {!params.movieId && (\n            <div>\n              <form\n                onSubmit={handleSubmit}\n                value={searchParams.get(\"query\") || \"\"}\n              >\n                <input\n                  type=\"text\"\n                  ref={elementRef}\n                  className=\"search-input\"\n                ></input>\n                <button type=\"submit\" className=\"back-button\">\n                  Search\n                </button>\n              </form>\n              <div className=\"search-list-div\">\n                <ul className=\"list\">\n                  {data &&\n                    data.map((element) => (\n                      <li key={element.id}>\n                        <Link to={\"/movie/\" + element.id}>{element.title}</Link>\n                      </li>\n                    ))}\n                </ul>\n              </div>\n            </div>\n          )}\n          {params.movieId && <Outlet />}\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n","const KEY = 'b8d87910aac56b00d09e566d900045a1';\n\nconst fetchMovies = (ending, abortController, query = '') => {\n  return query === ''\n    ? fetch(`https://api.themoviedb.org/3/${ending}?api_key=${KEY}`, {\n        signal: abortController.signal,\n      }).then(response => {\n        return response.json();\n      })\n    : fetch(`https://api.themoviedb.org/3/${ending}?api_key=${KEY}&query=${query}`, {\n        signal: abortController.signal,\n      }).then(response => {\n        return response.json();\n      });\n};\n\nconst api = {\n  fetchMovies,\n};\n\nexport default api;\n"],"names":["MoviePage","props","navigate","useNavigate","params","useParams","useSearchParams","searchParams","setSearchParams","useState","data","setData","elementRef","useRef","useEffect","abortController","AbortController","get","api","then","response","results","abort","ErrorBoundary","className","onClick","movieId","onSubmit","event","preventDefault","query","current","value","type","ref","map","element","to","id","title","KEY","fetchMovies","ending","fetch","signal","json"],"sourceRoot":""}